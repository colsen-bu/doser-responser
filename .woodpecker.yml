steps:
  # Build and test the application
  build:
    image: python:3.9-slim
    commands:
      - apt-get update && apt-get install -y build-essential
      - pip install -r requirements.txt
      - python -c "import dash_app.index; print('Import successful')"
    when:
      - event: [push, pull_request]

  # Build Docker image
  docker-build:
    image: plugins/docker
    settings:
      registry: 
        from_secret: docker_registry
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: ${CI_REPO_OWNER}/doser-responser
      tags:
        - latest
        - ${CI_COMMIT_SHA:0:8}
      dockerfile: Dockerfile
      context: .
    when:
      - event: push
      - branch: main

  # Deploy to production using Docker socket
  deploy:
    image: docker:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - docker pull ${CI_REPO_OWNER}/doser-responser:latest
      - docker stop doser-responser || true
      - docker rm doser-responser || true
      - docker run -d --name doser-responser --restart unless-stopped ${CI_REPO_OWNER}/doser-responser:latest
    when:
      - event: push
      - branch: main

  # Notify deployment status
  notify:
    image: plugins/webhook
    settings:
      urls:
        from_secret: webhook_url
      content_type: application/json
      template: |
        {
          "text": "ðŸš€ Doser Responser deployed successfully!\nCommit: {{ .Commit.SHA }}\nBranch: {{ .Commit.Branch }}\nAuthor: {{ .Commit.Author }}"
        }
    when:
      - event: push
      - branch: main
      - status: [success]

# Required secrets in Woodpecker:
# - docker_registry: Docker registry URL
# - docker_username: Docker registry username  
# - docker_password: Docker registry password
# - webhook_url: Optional webhook for notifications
